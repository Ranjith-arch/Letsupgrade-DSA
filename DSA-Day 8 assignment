//Question 1

// Java program to Find Number 
// of digits in base b. 

class GFG { 

      

    // function to print number of digits 

    static void findNumberOfDigits(long n, int base) 

    { 

          

        // Calculating log using base changing 

        // property and then taking it  

        // floor and then adding 1. 

        int dig = (int)(Math.floor( 

                        Math.log(n) / Math.log(base)) 

                        + 1);  

          

          

        // printing output 

        System.out.println("The Number of digits of Number "

                            + n + " in base " + base  

                            + " is " + dig); 

    } 

  

    // Driver method     

    public static void main(String[] args) 

    { 

        // taking inputs 

        long n = 1446; 

        int base = 7; 

          

        // calling the method 

        findNumberOfDigits(n, base); 

    } 
} 


Output :

The Number of digits of Number 1446 in base 7 is 4


//Question 2

import java.util.Stack;
 
class MinStack
{
    // main stack to store elements
    private Stack<Integer> s = new Stack<>();
 
    // variable to store minimum element
    private int min;
 
    // Inserts a given element on top of the stack
    public void push(int x)
    {
        if (s.empty()) {
            s.push(x);
            min = x;
        }
        else if (x > min) {
            s.push(x);
        }
        else {
            s.push(2 * x - min);
            min = x;
        }
    }
 
    // Removes top element from the stack and returns it
    public void pop()
    {
        if (s.empty()) {
            System.out.println("Stack underflow!!");
        }
 
        int top = s.peek();
        if (top < min)
            min = 2 * min - top;
        s.pop();
    }
 
    // Returns the minimum element from the stack in constant time
    public int min()
    {
        return min;
    }
 
    public static void main (String[] args)
    {
        MinStack s = new MinStack();
 
        s.push(6);
        System.out.println(s.min());
 
        s.push(7);
        System.out.println(s.min());
 
        s.push(5);
        System.out.println(s.min());
 
        s.push(3);
        System.out.println(s.min());
 
        s.pop();
        System.out.println(s.min());
 
        s.pop();
        System.out.println(s.min());
    }
}

Output: 
6
6
5
3
5
6
